@using ClientName.Web.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<PaginationModel>
@{
    if(Model.TotalPages > 0) {
        @RenderPager(Model)
    }
}

@helper RenderPager(PaginationModel model)
{
    <ul class="pagination">
        <li class="@Umbraco.If(model.CurrentPage <= 1, "disabled")">
            <a href="@Umbraco.If(model.CurrentPage > 1, Umbraco.ModifyQueryString("p", (model.CurrentPage - 1)), "#")"
                aria-label="@(Umbraco.GetDictionaryValue("Previous", "Previous"))">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        @for (var i = 1; i <= model.TotalPages; i++)
        {
            <li class="@Umbraco.If( model.CurrentPage == i, "active" )">
                @if (model.CurrentPage == i)
                {
                    <span>@i <span class="sr-only">(current)</span></span>
                } else
                {
                    <a href="@Umbraco.ModifyQueryString("p", i)">@i</a>
                }
            </li>
        }

        <li class="@Umbraco.If(model.CurrentPage >= model.TotalPages, "disabled")">
            <a href="@Umbraco.If(model.CurrentPage < model.TotalPages, Umbraco.ModifyQueryString("p", model.CurrentPage + 1), "#")"
                aria-label="@(Umbraco.GetDictionaryValue( "Next", "Next" ))">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
}